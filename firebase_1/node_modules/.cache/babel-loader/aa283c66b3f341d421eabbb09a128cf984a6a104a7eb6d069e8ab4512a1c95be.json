{"ast":null,"code":"var _jsxFileName = \"/Users/sa20/Desktop/Amelia's DAE Work/firebase_1/myacademicplanner/src/components/post.js\",\n  _s = $RefreshSig$();\nimport { db } from \"../config/firebase\";\nimport { getDocs, collection, addDoc } from 'firebase/firestore';\nimport { useEffect, useState } from 'react';\nimport { Timestamp } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [postsList, setPostsList] = useState([]);\n\n  //new\n  const [newPostTitle, setIsNewPostTitle] = useState(\"\");\n  const [newPostDate, setIsNnewPostDate] = useState(0);\n  const [newPostAuthor, setIsNewPostAuthor] = useState(\"\");\n  const [newPostLocation, setIsNewPostLocation] = useState(\"\");\n  const [newPostDescription, setIsnewPostDescription] = useState(\"\");\n  const postsCollectionRef = collection(db, \"Posts\"); //saving the variable that indicates which collection we want acsess\n\n  useEffect(() => {\n    // you cant make a use effect async, and we needed async in order to make it work\n    async function getPosts() {\n      // reading the data\n      // Set the posts\n      try {\n        const data = await getDocs(postsCollectionRef); // gets all the collections from firestore\n        const filteredData = data.docs.map(doc => ({\n          ...doc.data(),\n          id: doc.id\n        }));\n        setPostsList(filteredData);\n      } catch (err) {\n        alert(err);\n      }\n    }\n    getPosts();\n  }, []);\n  async function onSubmitPost() {\n    try {\n      await addDoc(postsCollectionRef, {\n        Title: newPostTitle,\n        Date: Timestamp.fromDate(new Date(newPostDate)),\n        Author: newPostAuthor,\n        location: newPostLocation,\n        Description: newPostDescription\n      });\n    } catch (err) {\n      alert(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title...\",\n      onChange: e => setIsNewPostTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Date...\",\n      type: \"date\",\n      onChange: e => setIsNnewPostDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Author...\",\n      onChange: e => setIsNewPostAuthor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Location...\",\n      onChange: e => setIsNewPostLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Description...\",\n      onChange: e => setIsnewPostDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onSubmitPost,\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: postsList.map(posts => {\n        var _posts$Date;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" Title: \", posts.Title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", (_posts$Date = posts.Date) === null || _posts$Date === void 0 ? void 0 : _posts$Date.toDate().toLocaleDateString(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\"\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"By: \", posts.Author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" Location: \", posts.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", posts.Description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"QdcV2gKdztRQ4PojWiZ/H5RUexQ=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["db","getDocs","collection","addDoc","useEffect","useState","Timestamp","jsxDEV","_jsxDEV","Posts","_s","postsList","setPostsList","newPostTitle","setIsNewPostTitle","newPostDate","setIsNnewPostDate","newPostAuthor","setIsNewPostAuthor","newPostLocation","setIsNewPostLocation","newPostDescription","setIsnewPostDescription","postsCollectionRef","getPosts","data","filteredData","docs","map","doc","id","err","alert","onSubmitPost","Title","Date","fromDate","Author","location","Description","children","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","posts","_posts$Date","toDate","toLocaleDateString","year","month","day","_c","$RefreshReg$"],"sources":["/Users/sa20/Desktop/Amelia's DAE Work/firebase_1/myacademicplanner/src/components/post.js"],"sourcesContent":["import {db} from \"../config/firebase\";\nimport {getDocs, collection, addDoc} from 'firebase/firestore';\nimport { useEffect, useState,} from 'react';\nimport { Timestamp } from 'firebase/firestore';\n\nfunction Posts() {\nconst [postsList, setPostsList] = useState([])\n\n//new\nconst [newPostTitle, setIsNewPostTitle] = useState(\"\")\nconst [newPostDate, setIsNnewPostDate] = useState(0)\nconst [newPostAuthor, setIsNewPostAuthor] = useState(\"\")\nconst [newPostLocation, setIsNewPostLocation] = useState(\"\")\nconst [newPostDescription, setIsnewPostDescription] = useState(\"\")\n\n\n\n\n  const postsCollectionRef = collection(db, \"Posts\") //saving the variable that indicates which collection we want acsess\n \n  useEffect(() => { // you cant make a use effect async, and we needed async in order to make it work\n      async function getPosts()  {\n      // reading the data\n      // Set the posts\n      try {\n        const data = await getDocs(postsCollectionRef) // gets all the collections from firestore\n        const filteredData = data.docs.map((doc)=>({...doc.data(),id: doc.id}));\n        setPostsList(filteredData);\n      } catch(err) {\n        alert(err)\n        }\n      }\n      getPosts();\n    }, []);\n\nasync function onSubmitPost() {\n    try {\n    await addDoc(postsCollectionRef, {\n        Title: newPostTitle,\n        Date: Timestamp.fromDate(new Date(newPostDate)),\n        Author: newPostAuthor,\n        location: newPostLocation,\n        Description: newPostDescription\n    })}\n    catch(err) {\n        alert(err)\n    }\n\n}\n\n    return(\n        <div>\n        <input placeholder=\"Title...\" onChange={(e) => setIsNewPostTitle(e.target.value)}></input>\n        <input placeholder=\"Date...\" type=\"date\" onChange={(e) => setIsNnewPostDate(e.target.value)}></input>\n        <input placeholder=\"Author...\"  onChange={(e) => setIsNewPostAuthor(e.target.value)}></input>\n        <input placeholder=\"Location...\" onChange={(e) => setIsNewPostLocation(e.target.value)}></input>\n        <input placeholder=\"Description...\" onChange={(e) => setIsnewPostDescription(e.target.value)}></input>\n       \n        {/* <input placeholder=\"Image...\"></input> */}\n        <button onClick={onSubmitPost}>Button</button>\n    <div>\n    {postsList.map((posts)=> (\n        <div>\n          <h1> Title: {posts.Title}</h1>\n          <p>Date: {posts.Date?.toDate().toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n})}</p>\n          <p>By: {posts.Author}</p>\n          <p> Location: {posts.location}</p>\n          <p>Description: {posts.Description}</p>\n          {/* <img src={posts.ImageURL}></img> */}\n          </div>\n      ))}\n    </div>\n        </div>\n    )\n}\n\nexport default Posts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}